#!/usr/bin/python3

import sys, os, argparse
try:
    from ptxprint.usfmerge import usfmerge2
except ImportError:
    sys.path.append(os.path.join(os.path.dirname(__file__), "..", "lib"))
    from ptxprint.usfmerge import usfmerge2

parser = argparse.ArgumentParser()
parser.add_argument("infile", help="Input USFM file(s)",nargs='+',default=[])
parser.add_argument("-k","--keys", help="Input file IDs, e.g -k LRA for 3 input files to be used as columns L, R and A.",default="LR")
parser.add_argument("-o","--outfile",help="output file")
parser.add_argument("-a","--astylesheet",default=[],action="append",help="add another stylesheet for infilea")
parser.add_argument("-b","--bstylesheet",default=[],action="append",help="add another stylesheet for infileb")
parser.add_argument("-s","--stylesheet",default=[],action="append",help="add another stylesheet for both files")
parser.add_argument("-S","--scores",help="Uneven scoring. A break is forced when the score of break-points is 100 or more. e.g. -S \"70,30,15,15\" will force a break in the 3rd and 4th input files if the first two agree, or in the 2nd if all other files agree.")
parser.add_argument("-m","--mode",default="doc",help="alignment algorithm: simple, *doc")
parser.add_argument("--fsecondary",action="store_true",help="Use fig elements from secondary not primary source")
parser.add_argument("--debug",action="store_true",help="Print out debug statements")
args = parser.parse_args()

sheetsa = args.stylesheet + args.astylesheet
sheetsb = args.stylesheet + args.bstylesheet
keyarr=list(args.keys)
if (len(keyarr) != len(args.infile)):
    print("Cannot have %d keys and %d files!" % (len(keyarr),len(args.infile)) )
    raise ValueError

scorearr={}
if args.scores:
    scorearr=args.scores.split(",")
    if (len(scorearr)!=len(keyarr)) :
        print("Cannot have %d keys and %d scores!" % (len(keyarr),len(args.infile)) )
        raise ValueError
else:
    s=1+100/len(keyarr)
    scorearr={k:s for k in keyarr}


usfmerge2(args.infile, keyarr, args.outfile, stylesheetsa=sheetsa, 
          stylesheetsb=sheetsb, fsecondary=args.fsecondary, mode=args.mode, debug=args.debug)

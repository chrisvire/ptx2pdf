PTXprint - AboutPTXprint.txt

"Bible Layout For Everyone" - Easily create scripture PDFs for trial publications

PTXprint is an easy-to-use program which harnesses the power of extended macros from PTX2PDF which is a XeTeX based macro package for typesetting USFM formatted (Paratext) scripture files. 

PTXprint is available for both Linux and Windows from the main home page: https://software.sil.org/ptxprint/#downloads
It is 64-bit software and will NOT run on 32-bit versions of Windows. It is recommended to be used with Paratext 8 (or later), but can also work even if Paratext is NOT installed. It is not (yet) part of the Paratext ecosystem, so does not get automatically updated. Please check the home page regularly for updated versions.

There is a Scripture Software Community page dedicated to PTXprint (https://community.scripture.software.sil.org/c/ptxprint/27) where you can get assistance from other PTXprint users.

Please use "New Issue" button in the GitHub Issue Tracking System (https://github.com/sillsdev/ptx2pdf/issues) to report any bugs, or document suggestions for improvement. 

If you serve in a sensitive location, you can report issues directly by e-mail <ptxprint_support@sil.org> rather than via the publicly accessible websites listed above.


Examples of running PTXprint from the commandline (in Windows):

"C:\Program Files\PTXprint\PTXprint.exe" -c Diglot XYZ
will OPEN PTXprint with XYZ project active and the saved configuration called "Diglot" (but won't print anything)

"C:\Program Files\PTXprint\PTXprint.exe" -c NTandPsalms -P XYZ
will directly create a PDF from the XYJ project using the saved configuration called "NTandPsalms" (no GUI will appear)

"C:\Program Files\PTXprint\PTXprint.exe" -b ROM -c SideXrefs -P XYZ
will directly create a PDF of ROMANS from the XYJ project using the saved configuration called "SideXrefs" (no GUI will appear)

"C:\Program Files\PTXprint\PTXprint.exe" -b "MAT MRK LUK JHN ACT GLO" -P XYZ
will directly create a PDF of 4 gospels, Acts and Glossary from the XYJ project using the Default configuration (no GUI will appear)

"C:\Program Files\PTXprint\PTXprint.exe" -d "C:\Temp"
runs PTXprint, and output PDF files will be created in C:\Temp folder instead of C:\My Paratext 9 Projects\<XYZ>\local\ptxprint

"C:\Program Files\PTXprint\PTXprint.exe" -h
will show the commandline usage parameters (as seen below)
 
usage: ptxprint [-h] [-c CONFIG] [-M MODULE] [-p PARATEXT] [-d DIRECTORY] [-P]
                [-b BOOKS] [-R RUNS] [-L LANG] [-m MACROS] [-l LOGGING]
                [--logfile LOGFILE] [--timeout TIMEOUT] [-T] [-f FONTPATH]
                [--nofontcache] [-A ACTION] [-D DEFINE] [--debug] [-C CAPTURE]
                [-z EXTRAS]
                [pid]

positional arguments:
  pid                   Project id or full path to a ptxprint.cfg file

optional arguments:
  -h, --help            show this help message and exit
  -c CONFIG, --config CONFIG
                        Configuration path to load
  -M MODULE, --module MODULE
                        Module to print
  -p PARATEXT, --paratext PARATEXT
                        Path to Paratext Projects directory
  -d DIRECTORY, --directory DIRECTORY
                        Directory to store temporary files in
  -P, --print           Hits print
  -b BOOKS, --books BOOKS
                        Space separated bookid list to set
  -R RUNS, --runs RUNS  limit xetex runs
  -L LANG, --lang LANG  Set UI language code
  -m MACROS, --macros MACROS
                        Directory containing TeX macros (paratext2.tex)
  -l LOGGING, --logging LOGGING
                        Enable logging level [DEBUG, *INFO*, WARN, ERROR]
  --logfile LOGFILE     Set logging file [ptxprint.log] or "none"
  --timeout TIMEOUT     xetex runtime timeout
  -T, --testing         Run in testing, output xdv
  -f FONTPATH, --fontpath FONTPATH
                        Directory of fonts to include (repeatable)
  --nofontcache         Don't use system fonts
  -A ACTION, --action ACTION
                        Run view method instead of print
  -D DEFINE, --define DEFINE
                        set UI component=value. Repeatable
  --debug               Give debug output
  -z EXTRAS, --extras EXTRAS
                        Special bit flags: 0 - verbose xdvipdfmx call
  
